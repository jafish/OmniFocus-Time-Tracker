property timeTrackingFile : "Time-Tracking.oo3"property timeTrackingFilePath : "/Users/jafish/Documents/OmniPresence/OmniOutliner"property ofTaskAndProjectLinkPrefix : "omnifocus:///task/"-- OmniOutliner Document Columns - set these if you have them in your documentproperty pStartColumnName : "Start Time"property pEndColumnName : "End Time"property pEstimateColumnName : "Estimated Time"property pDurationColumnName : "Time Spent"-- If yes, then mark the task as completed in OmniOutliner and in OmniFocus-- If no, exit the script-- For OmniFocus, this is a bit more complicated because the current task might not be highlighted-- Try to use the ID to easily locate it and mark it as donetell document named timeTrackingFile of application "OmniOutliner Pro"	-- First, find any already running tasks	set unfinishedTasks to (rows where (value of cell pEndColumnName is missing value) and text of topic is "Work Slice")	if unfinishedTasks is not {} then		-- Finish those tasks		repeat with workSliceRow in unfinishedTasks						set theOFTaskRow to parent of workSliceRow						-- If the parent is not already checked			if state of theOFTaskRow is unchecked then				-- Request to check it and the OmniFocus task that it's connected to				if button returned of (display dialog "Do you want to mark task " & "\"" & name of theOFTaskRow & "\"" & " as completed?" buttons {"Yes", "No"} default button 1 cancel button 2) is "Yes" then					-- Complete the task in OmniOutliner					set state of theOFTaskRow to checked					set wasTaskRunning to true					set endTime to current date					set startTime to current date					if exists cell pStartColumnName of workSliceRow then set startTime to value of cell pStartColumnName of workSliceRow					if exists cell pEndColumnName of workSliceRow then set value of cell pEndColumnName of workSliceRow to endTime					if exists cell pDurationColumnName of workSliceRow then set value of cell pDurationColumnName of workSliceRow to (endTime - startTime) / 3600										-- Look for the task in OmniFocus using the ID					-- A bit more complicated, but we'll use the ID of the task that's stored in the note					set theOFTaskRowNote to note of theOFTaskRow					if theOFTaskRowNote is not "" then						-- Split the note based on "/" as text item delimiter						set AppleScript's text item delimiters to {"/"}						set theOFTaskID to the last text item of theOFTaskRowNote						set AppleScript's text item delimiters to ""												-- Use the ID to mark the OmniFocus task as done						tell front document of application "OmniFocus"							set theOFTask to task id theOFTaskID							set note of theOFTask to my AddNoteToRowAndTask(workSliceRow, note of theOFTask)							set completed of theOFTask to true						end tell											else						-- If, for some reason, it's not there, or invalid, we'll search on the name												end if										-- If neither of those work, we'll just not mark the task done in OmniFocus but give an error				else					-- Do nothing and exit					return				end if			end if					end repeat	end ifend tellon AddNoteToRowAndTask(theOORow, existingOFTaskNote)	-- Add a note to the task	-- Prompt for a note		tell document named timeTrackingFile of application "OmniOutliner Pro"				set theTaskName to name of parent of theOORow as string				tell application id "sevs"			activate			set workSliceNotePrompt to display dialog (localized string "Please type a note for the completion of " & "\"" & theTaskName & "\".") default answer (localized string "")			set workSliceNote to the text returned of workSliceNotePrompt		end tell				-- If one was entered, add it as a note to the work log task; If not, don't do anything with it				if workSliceNote is not "" then			if existingOFTaskNote is not "" then				set finalTaskNote to existingOFTaskNote & "" & "DONE: " & workSliceNote			else				set finalTaskNote to workSliceNote			end if			set note of theOORow to workSliceNote		end if	end tell		return finalTaskNoteend AddNoteToRowAndTask